{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "Script",
  "description": "A bot script",
  "type": "object",
  "required": ["dialogs", "version"],
  "additionalProperties": false,
  "properties": {
    "version": {
      "description": "The version of this Script",
      "type": "string",
      "enum": ["2.0.0"]
    },
    "nlp_fallback": {
      "description": "What the bot will say when NLP doesn't recognize an intent",
      "type": "string"
    },
    "qna_followup": {
      "description": "The dialog the bot will go to after responding a question with the qna service",
      "type": "string",
      "minLength": 1
    },
    "unexpected_error_dialog": {
      "description": "what the bot will say when an unexpected error happens",
      "type": "string"
    },
    "intentions": {
      "description": "List of intentions that can be spotted by the NLP Engine",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dialog": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name"],
        "additionalProperties": false
      }
    },
    "commands": {
      "description": "List of commands that can be spotted by the Bot",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string"
          },
          "dialog": {
            "type": "string"
          }
        },
        "required": ["keyword", "dialog"],
        "additionalProperties": false
      }
    },
    "entities": {
      "description": "List of possible entities contained in this script",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"],
        "additionalProperties": false
      }
    },
    "qa": {
      "description": "List of Questions and its respective Answers",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "question": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "answer": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["question", "answer"],
        "additionalProperties": false
      }
    },
    "dialogs": {
      "description": "List of bot Script available Dialogs",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "actions": {
            "description": "List of Actions a Dialog will execute",
            "type": "array",
            "items": {
              "oneOf": [
                { "$ref": "#/definitions/sendText" },
                { "$ref": "#/definitions/waitInput" },
                { "$ref": "#/definitions/changeDialog" },
                { "$ref": "#/definitions/callIntegration" },
                { "$ref": "#/definitions/openFlow" },
                { "$ref": "#/definitions/setVar" },
                { "$ref": "#/definitions/sendMenu" },
                { "$ref": "#/definitions/sendCarousel" },
                { "$ref": "#/definitions/sendMedia" },
                { "$ref": "#/definitions/subscribeFeed" },
                { "$ref": "#/definitions/unsubscribeFeed" },
                { "$ref": "#/definitions/askForInput" },
                { "$ref": "#/definitions/handoff" },
                { "$ref": "#/definitions/if" }
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "condition": {
                  "$ref": "#/definitions/expression"
                }
              }
            },
            "required": ["id", "action"],
            "additionalProperties": false
          }
        },
        "required": ["name", "actions"],
        "additionalProperties": false
      }
    }
  },
  "definitions": {
    "buttons": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1
          },
          "payload": {
            "type": [
              "object",
              "string"
            ]
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "flow": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "label"
        ]
      }
    },
    "sendText": {
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        },
        "one_of": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1
        },
        "action": {
          "enum": ["send_text"]
        }
      },
      "required": ["action"]
    },
    "waitInput": {
      "properties": {
        "var_name": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["wait_input"]
        },
        "expect": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "minItems": 1
            },
            "attachment_types": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "payload": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fallback": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": {
            "type": "object",
            "properties": {
              "can_switch_content": {
                "type": "boolean"
              }
            }
          },
          "required": ["fallback"]
        }
      },
      "required": ["action", "var_name"]
    },
    "openFlow": {
      "properties": {
        "flow": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["open_flow"]
        }
      },
      "required": ["action", "flow"]
    },
    "setVar": {
      "properties": {
        "var_name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "minLength": 1
        },
        "action": {
          "enum": ["set_var"]
        }
      },
      "required": ["var_name", "value", "action"]
    },
    "changeDialog": {
      "properties": {
        "dialog": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["change_dialog"]
        }
      },
      "required": ["action", "dialog"]
    },
    "callIntegration": {
      "properties": {
        "integration": {
          "type": "string",
          "minLength": 1
        },
        "function": {
          "type": "string",
          "minLength": 1
        },
        "function_params": {
          "type": "array",
          "items": {
            "minLength": 1
          }
        },
        "action": {
          "enum": ["call_integration"]
        },
        "errors": {
          "type": "object",
          "patternProperties": {
            "^on_": {
              "type": "object",
              "properties": {
                "jump": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": ["jump"]
            }
          },
          "minProperties": 1
        }
      },
      "required": ["integration", "function", "function_params", "action"],
      "additionalItems": false
    },
    "sendMenu": {
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        },
        "buttons": {
          "$ref": "#/definitions/buttons"
        },
        "action": {
          "enum": ["send_menu"]
        }
      },
      "required": ["action", "buttons"]
    },
    "sendCarousel": {
      "properties": {
        "content_source": {
          "type": "string",
          "minLength": 2
        },
        "action": {
          "enum": ["send_carousel"]
        },
        "card_content": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "minLength": 2
            },
            "description": {
              "type": "string",
              "minLength": 2
            },
            "image_url": {
              "type": "string",
              "minLength": 2
            },
            "buttons": {
              "$ref": "#/definitions/buttons"
            }
          },
          "required": ["title"],
          "additionalProperties": false
        },
        "cards": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "buttons": {
                "$ref": "#/definitions/buttons"
              }
            },
            "required": ["title"]
          }
        }
      },
      "oneOf": [{
        "required": ["action", "cards"]
      }, {
      "required": ["action", "content_source", "card_content"]
      }]
    },
    "askForInput": {
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        },
        "var_name": {
          "type": "string",
          "minLength": 1
        },
        "quick_replies": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1
        },
        "action": {
          "enum": ["ask_for_input"]
        },
        "expect": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "minLength": 1
            },
            "fallback": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": ["entities", "fallback"]
        }
      },
      "required": ["action", "var_name", "text"]
    },
    "sendMedia": {
      "properties": {
        "url": {
          "type": "string"
        },
        "media_id": {
          "type": "string"
        },
        "buttons": {
          "$ref": "#/definitions/buttons"
        },
        "action": {
          "enum": ["send_media"]
        }
      },
      "oneOf": [{
        "required": ["action", "media_type", "url"]
      }, {
      "required": ["action", "media_type", "media_id"]
      }]
    },
    "subscribeFeed": {
      "properties": {
        "feed": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["subscribe_feed"]
        }
      },
      "required": ["action", "feed"]
    },
    "unsubscribeFeed": {
      "properties": {
        "feed": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["unsubscribe_feed"]
        }
      },
      "required": ["action", "feed"]
    },
    "handoff": {
      "properties": {
        "assignee": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["handoff"]
        }
      },
      "required": ["action", "assignee"]
    },
    "unaryOperators": {
      "type": "string",
      "enum": ["is_empty", "is_not_empty"]
    },
    "if": {
      "properties": {
        "then": {
          "type": "string",
          "minLength": 1
        },
        "else": {
          "type": "string",
          "minLength": 1
        },
        "action": {
          "enum": ["if"]
        }
      },
      "required": ["action", "condition", "then"]
    },
    "binaryOperators": {
      "type": "string",
      "enum": ["equal", "not_equal", "has_entity"]
    },
    "operands": {
      "anyOf": [
        { "type": "string" },
        { "type": "boolean" },
        { "type": "number" },
        { "$ref": "#/definitions/expression" }
      ]
    },
    "operators": {
      "anyOf": [
        { "$ref": "#/definitions/unaryOperators" },
        { "$ref": "#/definitions/binaryOperators" }
      ]
    },
    "expression": {
      "type": "array",
      "items": [
        { "$ref": "#/definitions/operands" },
        { "$ref": "#/definitions/operators" },
        { "$ref": "#/definitions/operands" }
      ],
      "minItems": 2,
      "maxItems": 3
    }
  }
}
